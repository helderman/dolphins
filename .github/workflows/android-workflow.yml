name: android-workflow
on: workflow_dispatch
defaults:
        run:
                working-directory: android
jobs:
        build:
                runs-on: ubuntu-latest
                outputs:
                        appVersionCode: ${{ steps.version.outputs.appVersionCode }}
                        appVersionTag: ${{ steps.version.outputs.appVersionTag }}
                steps:
                        - name: Checkout
                          uses: actions/checkout@v4

                        - name: Setup JDK
                          uses: actions/setup-java@v4
                          with:
                                  distribution: 'temurin'
                                  java-version: '17'
                                  cache: 'gradle'

                        - name: Setup Android SDK
                          uses: android-actions/setup-android@v3

                        - name: Make gradlew executable
                          run: chmod +x ./gradlew

                        - name: Static code analysis (lint)
                          run: ./gradlew --no-daemon lint

                        - name: Unit tests
                          run: ./gradlew --no-daemon test

                        - name: Decode keystore
                          run: base64 -d <<< "$KEYSTORE" > "$KEYSTORE_FILENAME"
                          env:
                                KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
                                KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks

                        - name: Create bundle
                          run: ./gradlew --no-daemon bundleRelease
                          env:
                                KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks
                                KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
                                KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                                KEY_ALIAS: "upload"

                        - name: Delete keystore
                          if: always()
                          run: rm -f "$KEYSTORE_FILENAME"
                          env:
                                KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks

                        - name: Upload artifacts
                          if: always()
                          uses: actions/upload-artifact@v4
                          with:
                                name: android-build
                                path: android/app/build/*ts/

                        - id: version
                          name: Get version
                          run: |
                                appVersionCode="$(grep -oP '^\s*versionCode\s+\K\d+' app/build.gradle)"
                                appVersionName="$(grep -oP '^\s*versionName\s+"\K[^"]+' app/build.gradle)"
                                appVersionTag="android-$appVersionName"
                                if [ -z "$appVersionCode" -o -z "$appVersionName" ]; then
                                        echo "::error::Version info not found in app/build.gradle"
                                elif [ "$(git ls-remote --tags origin "refs/tags/$appVersionTag")" ]; then
                                        echo "::warning::Tag $appVersionTag already exists; will not deploy."
                                elif [ "$APP_BRANCH" != 'refs/heads/master' ]; then
                                        echo "::warning::Branch $APP_BRANCH is not master; will not deploy."
                                else
                                        echo "appVersionCode=$appVersionCode" >> $GITHUB_OUTPUT
                                        echo "appVersionTag=$appVersionTag" >> $GITHUB_OUTPUT
                                fi
                          env:
                                APP_BRANCH: ${{ github.ref }}

        test:
                runs-on: macos-13
                strategy:
                        fail-fast: false
                        matrix:
                                api-level: [21, 29, 33, 34, 35]
                                target: [google_apis]
                                arch: [x86_64]
                steps:
                        - name: Checkout
                          uses: actions/checkout@v4

                        - name: Setup JDK
                          uses: actions/setup-java@v4
                          with:
                                  distribution: 'temurin'
                                  java-version: '17'
                                  cache: 'gradle'

                        - name: Setup Android SDK
                          uses: android-actions/setup-android@v3

                        - name: Make gradlew executable
                          run: chmod +x ./gradlew

                        - name: Integration tests
                          uses: reactivecircus/android-emulator-runner@v2
                          with:
                                api-level: ${{ matrix.api-level }}
                                target: ${{ matrix.target }}
                                arch: ${{ matrix.arch }}
                                script: ./gradlew --no-daemon connectedCheck
                                working-directory: android

                        - name: Upload artifacts
                          if: always()
                          uses: actions/upload-artifact@v4
                          with:
                                name: android-test-${{ matrix.api-level }}
                                path: android/app/build/reports/

        deploy:
                runs-on: ubuntu-latest
                needs: [build, test]
                if: ${{ needs.build.outputs.appVersionTag }}
                steps:
                        - name: Checkout
                          uses: actions/checkout@v4

                        - name: Download build artifact
                          uses: actions/download-artifact@v4
                          with:
                                name: android-build
                                path: android/app/build/

                        - name: Upload bundle to Google Play
                          uses: r0adkll/upload-google-play@v1
                          with:
                                serviceAccountJsonPlainText: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
                                packageName: com.dojadragon.dolphins
                                releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
                                track: internal
                                status: completed

                        - name: Set tag
                          run: |
                                git config --global user.email 'r.helderman@hccnet.nl'
                                git config --global user.name 'helderman'
                                git tag -a "$appVersionTag" -m "Release $appVersionCode - auto-upload $(date +'%Y-%m-%d')."
                                git push origin "$appVersionTag"
                          env:
                                appVersionCode: ${{ needs.build.outputs.appVersionCode }}
                                appVersionTag: ${{ needs.build.outputs.appVersionTag }}
