name: android-workflow
on: workflow_dispatch
defaults:
        run:
                working-directory: android
jobs:
        build:
                runs-on: ubuntu-latest
                outputs:
                        appVersionCode: ${{ steps.version.outputs.appVersionCode }}
                        appVersionTag: ${{ steps.version.outputs.appVersionTag }}
                steps:
                        - name: Checkout
                          uses: actions/checkout@v4

                        - name: Setup Android SDK
                          uses: android-actions/setup-android@v2

                        - name: Set JAVA_HOME for gradle
                          run: echo "JAVA_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV

                        - name: Make gradlew executable
                          run: chmod +x ./gradlew

                        - name: Static code analysis (lint)
                          run: ./gradlew --no-daemon lint

                        - name: Unit tests
                          run: ./gradlew --no-daemon test

                        - name: Decode keystore
                          run: base64 -d <<< "$KEYSTORE" > "$KEYSTORE_FILENAME"
                          env:
                                  KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
                                  KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks

                        - name: Create bundle
                          run: ./gradlew --no-daemon bundleRelease
                          env:
                                  KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks
                                  KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
                                  KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                                  KEY_ALIAS: "upload"

                        - name: Delete keystore
                          if: always()
                          run: rm -f "$KEYSTORE_FILENAME"
                          env:
                                  KEYSTORE_FILENAME: ${{ runner.temp }}/android-upload.jks

                        - name: Upload artifacts
                          if: always()
                          uses: actions/upload-artifact@v3
                          with:
                                  name: android-build
                                  path: android/app/build/*ts/

                        - id: version
                          name: Get version
                          run: |
                                appVersionCode="$(grep -oP '^\s*versionCode\s+\K\d+' app/build.gradle)"
                                echo Ruud appVersionCode = $appVersionCode
                                appVersionName="$(grep -oP '^\s*versionName\s+"\K[^"]+' app/build.gradle)"
                                echo Ruud appVersionName = $appVersionName
                                appVersionTag="android-$appVersionName"
                                echo Ruud appVersionTag = $appVersionTag
                                git ls-remote --tags origin "refs/tags/$appVersionTag"
                                echo Ruud start
                                if [ -z "$appVersionCode" -o -z "$appVersionName" ]; then
                                        echo "::error::Version info not found in app/build.gradle"
                                elif [ "$(git tag -l "$appVersionTag")" ]; then
                                        echo "::warning::Tag $appVersionTag already exists; will not deploy"
                                elif [ "$APP_BRANCH" != 'refs/heads/testdeploy' ]; then
                                        echo "::warning::Branch $APP_BRANCH is not testdeploy; will not deploy"
                                else
                                        echo "::warning::Ruud DEBUG"
                                        echo "appVersionCode=$appVersionCode" >> $GITHUB_OUTPUT
                                        echo "appVersionTag=$appVersionTag" >> $GITHUB_OUTPUT
                                fi
                          env:
                                APP_BRANCH: ${{ github.ref }}

        deploy:
                runs-on: ubuntu-latest
                needs: build
                if: ${{ needs.build.outputs.appVersionTag }}
                steps:
                        - name: Checkout
                          uses: actions/checkout@v4

                        - name: Download build artifact
                          uses: actions/download-artifact@v3
                          with:
                                  name: android-build
                                  path: android/app/build

                        - name: DEBUG download
                          run: |
                                pwd
                                ls -R app/build

                        - name: Upload bundle to Google Play
                          uses: r0adkll/upload-google-play@v1
                          with:
                                  serviceAccountJsonPlainText: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
                                  packageName: com.dojadragon.dolphins
                                  releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
                                  track: internal
                                  status: completed

                        - name: Set tag
                          run: |
                                git tag -a "$appVersionTag" -m "Release $appVersionCode - auto-upload $(date +'%Y-%m-%d')."
                                git push origin "$appVersionTag"
                          env:
                                appVersionCode: ${{ needs.build.outputs.appVersionCode }}
                                appVersionTag: ${{ needs.build.outputs.appVersionTag }}
